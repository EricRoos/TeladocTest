I"”(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.PurchaseButton = (function(superClass) {
    extend(PurchaseButton, superClass);

    function PurchaseButton() {
      return PurchaseButton.__super__.constructor.apply(this, arguments);
    }

    PurchaseButton.prototype.purchase = function() {
      return this.props.items.forEach(function(item) {
        return console.log(item);
      });
    };

    PurchaseButton.prototype.render = function() {
      return <button onClick={this.purchase} className='purchase_btn'>Purchase!</button>;
    };

    return PurchaseButton;

  })(React.Component);

}).call(this);
:ET